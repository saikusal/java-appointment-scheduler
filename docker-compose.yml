version: '3.8'

services:
  # User Service
  user-service:
    # IMPORTANT: Use the image name you pushed to your registry
    image: your-docker-repo/user-service:latest
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql_db:3306/user_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=password
    depends_on:
      mysql_db:
        condition: service_healthy

  # Schedule Service
  schedule-service:
    image: your-docker-repo/schedule-service:latest
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql_db:3306/schedule_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=password
    depends_on:
      mysql_db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Booking Service
  booking-service:
    image: your-docker-repo/booking-service:latest
    ports:
      - "8083:8083"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql_db:3306/booking_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=password
      # This URL uses the service name 'schedule-service' defined in this file
      - SCHEDULE_SERVICE_URL=http://schedule-service:8082/api/schedules
    depends_on:
      mysql_db:
        condition: service_healthy
      schedule-service:
        condition: service_healthy

  # MySQL Database
  mysql_db:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=password
    volumes:
      - mysql-data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mysql-data:
